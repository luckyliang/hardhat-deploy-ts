/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMetaverseAdditionFacet,
  IMetaverseAdditionFacetInterface,
} from "../../../contracts/interfaces/IMetaverseAdditionFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_administrativeConsumer",
        type: "address",
      },
    ],
    name: "AdministrativeConsumerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "ConsumableAdapterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_metaverseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "SetMetaverseName",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_metaverseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_status",
        type: "bool",
      },
    ],
    name: "SetRegistry",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_metaverseId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_metaverseRegistries",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_administrativeConsumers",
        type: "address[]",
      },
    ],
    name: "addMetaverseWithAdapters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_metaverseId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "_metaverseRegistries",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_administrativeConsumers",
        type: "address[]",
      },
    ],
    name: "addMetaverseWithoutAdapters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMetaverseAdditionFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IMetaverseAdditionFacetInterface {
    return new utils.Interface(_abi) as IMetaverseAdditionFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMetaverseAdditionFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IMetaverseAdditionFacet;
  }
}
