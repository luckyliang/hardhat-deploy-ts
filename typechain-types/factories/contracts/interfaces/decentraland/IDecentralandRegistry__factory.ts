/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDecentralandRegistry,
  IDecentralandRegistryInterface,
} from "../../../../contracts/interfaces/decentraland/IDecentralandRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_estateId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_landIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setManyLandUpdateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setUpdateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IDecentralandRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IDecentralandRegistryInterface {
    return new utils.Interface(_abi) as IDecentralandRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDecentralandRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IDecentralandRegistry;
  }
}
