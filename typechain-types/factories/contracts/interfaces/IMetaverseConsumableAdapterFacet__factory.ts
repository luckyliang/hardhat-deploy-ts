/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMetaverseConsumableAdapterFacet,
  IMetaverseConsumableAdapterFacetInterface,
} from "../../../contracts/interfaces/IMetaverseConsumableAdapterFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_administrativeConsumer",
        type: "address",
      },
    ],
    name: "AdministrativeConsumerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "ConsumableAdapterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "UpdateAdapterAdministrativeConsumer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "UpdateAdapterConsumer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
    ],
    name: "UpdateRentConsumer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
    ],
    name: "administrativeConsumer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
    ],
    name: "consumableAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_metaverseId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_metaverseAssetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFutureTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "listWithConsumableAdapter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "rentConsumer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxRentStart",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_consumer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_referrer",
        type: "address",
      },
    ],
    name: "rentWithConsumer",
    outputs: [
      {
        internalType: "uint256",
        name: "rentId_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "rentStartsNow_",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_administrativeConsumer",
        type: "address",
      },
    ],
    name: "setAdministrativeConsumerFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_metaverseRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_consumableAdapter",
        type: "address",
      },
    ],
    name: "setConsumableAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
    ],
    name: "updateAdapterAdministrativeState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "updateAdapterState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newConsumer",
        type: "address",
      },
    ],
    name: "updateConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMetaverseConsumableAdapterFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IMetaverseConsumableAdapterFacetInterface {
    return new utils.Interface(
      _abi
    ) as IMetaverseConsumableAdapterFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMetaverseConsumableAdapterFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IMetaverseConsumableAdapterFacet;
  }
}
