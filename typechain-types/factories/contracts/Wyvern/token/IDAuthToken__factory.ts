/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IDAuthToken,
  IDAuthTokenInterface,
} from "../../../../contracts/Wyvern/token/IDAuthToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "approveFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "uris",
        type: "string[]",
      },
    ],
    name: "batchMintWithURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApproveFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintWithURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tip",
            type: "string",
          },
        ],
        internalType: "struct IDAuth712.Identity",
        name: "identity",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200353f3803806200353f8339810160408190526200003491620003e0565b604080518082018252600881526709c8ca84082eae8d60c31b602080830191909152825180840190935260048352634e46544160e01b9083015290620000816301ffc9a760e01b62000188565b81516200009690600690602085019062000334565b508051620000ac90600790602084019062000334565b50620000bf6380ac58cd60e01b62000188565b620000d1635b5e139f60e01b62000188565b620000e363780e9d6360e01b62000188565b5060009050620000f26200020d565b600b80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506200017c60405180608001604052806200015f6200021160201b60201c565b8152602081018490526040810185905230606090910152620002ab565b600a5550620004ad9050565b6001600160e01b03198082161415620001e8576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b3390565b60068054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015620002a15780601f106200027557610100808354040283529160200191620002a1565b820191906000526020600020905b8154815290600101906020018083116200028357829003601f168201915b5050505050905090565b805180516020918201208183015180519083012060408085015160608087015183517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81890152808501969096529085019390935260808401526001600160a01b0390911660a0808401919091528151808403909101815260c090920190528051910120919050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200036c5760008555620003b7565b82601f106200038757805160ff1916838001178555620003b7565b82800160010185558215620003b7579182015b82811115620003b75782518255916020019190600101906200039a565b50620003c5929150620003c9565b5090565b5b80821115620003c55760008155600101620003ca565b60008060408385031215620003f3578182fd5b8251602080850151919350906001600160401b038082111562000414578384fd5b818601915086601f83011262000428578384fd5b8151818111156200043557fe5b604051601f8201601f19168101850183811182821017156200045357fe5b60405281815283820185018910156200046a578586fd5b8592505b818310156200048d57838301850151818401860152918401916200046e565b818311156200049e57858583830101525b80955050505050509250929050565b61308280620004bd6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806355f804b31161010f5780639e5faafc116100a2578063c87b56dd11610071578063c87b56dd146103dd578063e985e9c5146103f0578063f2fde38b14610403578063fb4c4bcd14610416576101e5565b80639e5faafc1461039c578063a22cb465146103a4578063b88d4fde146103b7578063bd84d648146103ca576101e5565b806370a08231116100de57806370a0823114610371578063715018a6146103845780638da5cb5b1461038c57806395d89b4114610394576101e5565b806355f804b3146103305780636352211e1461034357806368573107146103565780636c0360eb14610369576101e5565b806323b872dd1161018757806342842e0e1161015657806342842e0e146102e457806342966c68146102f75780634a99950b1461030a5780634f6ccce71461031d576101e5565b806323b872dd146102985780632ba605aa146102ab5780632f745c59146102be57806340c10f19146102d1576101e5565b806308ae4b0c116101c357806308ae4b0c14610248578063095ea7b31461025b5780630e461a101461027057806318160ddd14610283576101e5565b806301ffc9a7146101ea57806306fdde0314610213578063081812fc14610228575b600080fd5b6101fd6101f8366004612a3e565b610429565b60405161020a9190612bb9565b60405180910390f35b61021b61044c565b60405161020a9190612be2565b61023b610236366004612b52565b6104e2565b60405161020a9190612ba5565b6101fd610256366004612765565b610544565b61026e61026936600461288c565b610559565b005b6101fd61027e366004612765565b61062f565b61028b61064d565b60405161020a9190612d79565b61026e6102a63660046127b1565b61065e565b61026e6102b936600461296b565b610731565b61028b6102cc36600461288c565b610863565b61026e6102df36600461288c565b61088e565b61026e6102f23660046127b1565b61092e565b61026e610305366004612b52565b6109db565b61026e6103183660046128b5565b610a79565b61028b61032b366004612b52565b610b1f565b61026e61033e366004612a66565b610b35565b61023b610351366004612b52565b610bd0565b61026e61036436600461290a565b610bf8565b61021b610cef565b61028b61037f366004612765565b610d50565b61026e610db8565b61023b610e64565b61021b610e73565b61026e610ed4565b61026e6103b2366004612852565b610f49565b61026e6103c53660046127ec565b61104e565b6101fd6103d8366004612a99565b611119565b61021b6103eb366004612b52565b611242565b6101fd6103fe36600461277f565b6114c5565b61026e610411366004612765565b6114f3565b61026e610424366004612852565b6115f6565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d85780601f106104ad576101008083540402835291602001916104d8565b820191906000526020600020905b8154815290600101906020018083116104bb57829003601f168201915b5050505050905090565b60006104ed826116af565b6105285760405162461bcd60e51b815260040180806020018281038252602c815260200180612f3c602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600c6020526000908152604090205460ff1681565b600061056482610bd0565b9050806001600160a01b0316836001600160a01b031614156105b75760405162461bcd60e51b815260040180806020018281038252602181526020018061302c6021913960400191505060405180910390fd5b806001600160a01b03166105c96116bc565b6001600160a01b031614806105e557506105e5816103fe6116bc565b6106205760405162461bcd60e51b8152600401808060200182810382526038815260200180612e8f6038913960400191505060405180910390fd5b61062a83836116c0565b505050565b6001600160a01b03166000908152600c602052604090205460ff1690565b6000610659600261172e565b905090565b600c600061066a6116bc565b6001600160a01b0316815260208101919091526040016000205460ff16806106b157506106956116bc565b6001600160a01b03166106a6610e64565b6001600160a01b0316145b6106f0576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b6107016106fb6116bc565b82611739565b6107265760405162461bcd60e51b815260040161071d90612d28565b60405180910390fd5b61062a8383836117dd565b600c600061073d6116bc565b6001600160a01b0316815260208101919091526040016000205460ff168061078457506107686116bc565b6001600160a01b0316610779610e64565b6001600160a01b0316145b6107c3576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b81518351146107e45760405162461bcd60e51b815260040161071d90612c6c565b80518251146108055760405162461bcd60e51b815260040161071d90612cb4565b60005b835181101561085d5761085584828151811061082057fe5b602002602001015184838151811061083457fe5b602002602001015184848151811061084857fe5b6020026020010151610a79565b600101610808565b50505050565b6001600160a01b03821660009081526001602052604081206108859083611929565b90505b92915050565b600c600061089a6116bc565b6001600160a01b0316815260208101919091526040016000205460ff16806108e157506108c56116bc565b6001600160a01b03166108d6610e64565b6001600160a01b0316145b610920576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b61092a8282611935565b5050565b600c600061093a6116bc565b6001600160a01b0316815260208101919091526040016000205460ff168061098157506109656116bc565b6001600160a01b0316610976610e64565b6001600160a01b0316145b6109c0576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b61062a8383836040518060200160405280600081525061104e565b600c60006109e76116bc565b6001600160a01b0316815260208101919091526040016000205460ff1680610a2e5750610a126116bc565b6001600160a01b0316610a23610e64565b6001600160a01b0316145b610a6d576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b610a7681611a63565b50565b600c6000610a856116bc565b6001600160a01b0316815260208101919091526040016000205460ff1680610acc5750610ab06116bc565b6001600160a01b0316610ac1610e64565b6001600160a01b0316145b610b0b576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b610b158383611935565b61062a8282611b30565b600080610b2d600284611b93565b509392505050565b600c6000610b416116bc565b6001600160a01b0316815260208101919091526040016000205460ff1680610b885750610b6c6116bc565b6001600160a01b0316610b7d610e64565b6001600160a01b0316145b610bc7576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b610a7681611baf565b600061088882604051806060016040528060298152602001612ef16029913960029190611bc2565b600c6000610c046116bc565b6001600160a01b0316815260208101919091526040016000205460ff1680610c4b5750610c2f6116bc565b6001600160a01b0316610c40610e64565b6001600160a01b0316145b610c8a576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b8051825114610cab5760405162461bcd60e51b815260040161071d90612c6c565b60005b825181101561062a57610ce7838281518110610cc657fe5b6020026020010151838381518110610cda57fe5b602002602001015161088e565b600101610cae565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d85780601f106104ad576101008083540402835291602001916104d8565b60006001600160a01b038216610d975760405162461bcd60e51b815260040180806020018281038252602a815260200180612ec7602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206108889061172e565b610dc06116bc565b6001600160a01b0316610dd1610e64565b6001600160a01b031614610e1a576040805162461bcd60e51b81526020600482018190526024820152600080516020612f94833981519152604482015290519081900360640190fd5b600b546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600b80546001600160a01b0319169055565b600b546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104d85780601f106104ad576101008083540402835291602001916104d8565b610edc6116bc565b6001600160a01b0316610eed610e64565b6001600160a01b031614610f36576040805162461bcd60e51b81526020600482018190526024820152600080516020612f94833981519152604482015290519081900360640190fd5b610f3e610e64565b6001600160a01b0316ff5b610f516116bc565b6001600160a01b0316826001600160a01b03161415610fb7576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610fc46116bc565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556110086116bc565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b600c600061105a6116bc565b6001600160a01b0316815260208101919091526040016000205460ff16806110a157506110856116bc565b6001600160a01b0316611096610e64565b6001600160a01b0316145b6110e0576040805162461bcd60e51b815260206004820152601a602482015260008051602061300c833981519152604482015290519081900360640190fd5b6110f16110eb6116bc565b83611739565b61110d5760405162461bcd60e51b815260040161071d90612d28565b61085d84848484611bcf565b60008061112585611c21565b9050600061113282611c96565b905060008060008680602001905181019061114d9190612b6a565b9250925092506000600185858585604051600081526020016040526040516111789493929190612bc4565b6020604051602081039080840390855afa15801561119a573d6000803e3d6000fd5b50505060206040510351905089600001516001600160a01b0316816001600160a01b0316146111db5760405162461bcd60e51b815260040161071d90612c35565b896020015142101580156111f557508960200151603c0142105b6112115760405162461bcd60e51b815260040161071d90612cf8565b61121a89610bd0565b6001600160a01b03168a600001516001600160a01b03161496505050505050505b9392505050565b606061124d826116af565b6112885760405162461bcd60e51b815260040180806020018281038252602f815260200180612fdd602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084526060939283018282801561131d5780601f106112f25761010080835404028352916020019161131d565b820191906000526020600020905b81548152906001019060200180831161130057829003601f168201915b50505050509050606061132e610cef565b905080516000141561134257509050610447565b8151156114035780826040516020018083805190602001908083835b6020831061137d5780518252601f19909201916020918201910161135e565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106113c55780518252601f1990920191602091820191016113a6565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050610447565b8061140d85611cd4565b6040516020018083805190602001908083835b6020831061143f5780518252601f199092019160209182019101611420565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106114875780518252601f199092019160209182019101611468565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6114fb6116bc565b6001600160a01b031661150c610e64565b6001600160a01b031614611555576040805162461bcd60e51b81526020600482018190526024820152600080516020612f94833981519152604482015290519081900360640190fd5b6001600160a01b03811661159a5760405162461bcd60e51b8152600401808060200182810382526026815260200180612e196026913960400191505060405180910390fd5b600b546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6115fe6116bc565b6001600160a01b031661160f610e64565b6001600160a01b031614611658576040805162461bcd60e51b81526020600482018190526024820152600080516020612f94833981519152604482015290519081900360640190fd5b6001600160a01b0382166000908152600c602052604090205460ff161515811515141561168457600080fd5b6001600160a01b03919091166000908152600c60205260409020805460ff1916911515919091179055565b6000610888600283611daf565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906116f582610bd0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061088882611dbb565b6000611744826116af565b61177f5760405162461bcd60e51b815260040180806020018281038252602c815260200180612e63602c913960400191505060405180910390fd5b600061178a83610bd0565b9050806001600160a01b0316846001600160a01b031614806117c55750836001600160a01b03166117ba846104e2565b6001600160a01b0316145b806117d557506117d581856114c5565b949350505050565b826001600160a01b03166117f082610bd0565b6001600160a01b0316146118355760405162461bcd60e51b8152600401808060200182810382526029815260200180612fb46029913960400191505060405180910390fd5b6001600160a01b03821661187a5760405162461bcd60e51b8152600401808060200182810382526024815260200180612e3f6024913960400191505060405180910390fd5b61188583838361062a565b6118906000826116c0565b6001600160a01b03831660009081526001602052604090206118b29082611dbf565b506001600160a01b03821660009081526001602052604090206118d59082611dcb565b506118e260028284611dd7565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006108858383611ded565b6001600160a01b038216611990576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611999816116af565b156119eb576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6119f76000838361062a565b6001600160a01b0382166000908152600160205260409020611a199082611dcb565b50611a2660028284611dd7565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611a6e82610bd0565b9050611a7c8160008461062a565b611a876000836116c0565b6000828152600860205260409020546002600019610100600184161502019091160415611ac5576000828152600860205260408120611ac59161252f565b6001600160a01b0381166000908152600160205260409020611ae79083611dbf565b50611af3600283611e51565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b611b39826116af565b611b745760405162461bcd60e51b815260040180806020018281038252602c815260200180612f68602c913960400191505060405180910390fd5b6000828152600860209081526040909120825161062a92840190612573565b6000808080611ba28686611e5d565b9097909650945050505050565b805161092a906009906020840190612573565b60006117d5848484611ed8565b611bda8484846117dd565b611be684848484611fa2565b61085d5760405162461bcd60e51b8152600401808060200182810382526032815260200180612de76032913960400191505060405180910390fd5b805160208083015160409384015180519083012084517f7a77f64c3d5640445ae7fbbfd8454459fa04681b3fc267e744ae8cbf4ada8800818501526001600160a01b039094168486015260608401919091526080808401919091528351808403909101815260a0909201909252805191012090565b600a546040805161190160f01b6020808301919091526022820193909352604280820194909452815180820390940184526062019052815191012090565b606081611cf957506040805180820190915260018152600360fc1b6020820152610447565b8160005b8115611d1157600101600a82049150611cfd565b60608167ffffffffffffffff81118015611d2a57600080fd5b506040519080825280601f01601f191660200182016040528015611d55576020820181803683370190505b50859350905060001982015b8315611da657600a840660300160f81b82828060019003935081518110611d8457fe5b60200101906001600160f81b031916908160001a905350600a84049350611d61565b50949350505050565b6000610885838361210a565b5490565b60006108858383612122565b600061088583836121e8565b60006117d584846001600160a01b038516612232565b81546000908210611e2f5760405162461bcd60e51b8152600401808060200182810382526022815260200180612dc56022913960400191505060405180910390fd5b826000018281548110611e3e57fe5b9060005260206000200154905092915050565b600061088583836122c9565b815460009081908310611ea15760405162461bcd60e51b8152600401808060200182810382526022815260200180612f1a6022913960400191505060405180910390fd5b6000846000018481548110611eb257fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611f735760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611f38578181015183820152602001611f20565b50505050905090810190601f168015611f655780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611f8657fe5b9060005260206000209060020201600101549150509392505050565b6000611fb6846001600160a01b031661239d565b611fc2575060016117d5565b60606120d0630a85bd0160e11b611fd76116bc565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561203e578181015183820152602001612026565b50505050905090810190601f16801561206b5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612de7603291396001600160a01b03881691906123a3565b905060008180602001905160208110156120e957600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156121de578354600019808301919081019060009087908390811061215557fe5b906000526020600020015490508087600001848154811061217257fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806121a257fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610888565b6000915050610888565b60006121f4838361210a565b61222a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610888565b506000610888565b60008281526001840160205260408120548061229757505060408051808201825283815260208082018481528654600181810189556000898152848120955160029093029095019182559151908201558654868452818801909252929091205561123b565b828560000160018303815481106122aa57fe5b906000526020600020906002020160010181905550600091505061123b565b600081815260018301602052604081205480156121de57835460001980830191908101906000908790839081106122fc57fe5b906000526020600020906002020190508087600001848154811061231c57fe5b60009182526020808320845460029093020191825560019384015491840191909155835482528983019052604090209084019055865487908061235b57fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506108889350505050565b3b151590565b60606117d58484600085856123b78561239d565b612408576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106124475780518252601f199092019160209182019101612428565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146124a9576040519150601f19603f3d011682016040523d82523d6000602084013e6124ae565b606091505b50915091506124be8282866124c9565b979650505050505050565b606083156124d857508161123b565b8251156124e85782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611f38578181015183820152602001611f20565b50805460018160011615610100020316600290046000825580601f106125555750610a76565b601f016020900490600052602060002090810190610a7691906125ff565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826125a957600085556125ef565b82601f106125c257805160ff19168380011785556125ef565b828001600101855582156125ef579182015b828111156125ef5782518255916020019190600101906125d4565b506125fb9291506125ff565b5090565b5b808211156125fb5760008155600101612600565b80356001600160a01b038116811461044757600080fd5b600082601f83011261263b578081fd5b813561264e61264982612da6565b612d82565b81815291506020808301908481018184028601820187101561266f57600080fd5b60005b848110156126955761268382612614565b84529282019290820190600101612672565b505050505092915050565b600082601f8301126126b0578081fd5b81356126be61264982612da6565b8181529150602080830190848101818402860182018710156126df57600080fd5b60005b84811015612695578135845292820192908201906001016126e2565b600082601f83011261270e578081fd5b813567ffffffffffffffff81111561272257fe5b612735601f8201601f1916602001612d82565b915080825283602082850101111561274c57600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215612776578081fd5b61088582612614565b60008060408385031215612791578081fd5b61279a83612614565b91506127a860208401612614565b90509250929050565b6000806000606084860312156127c5578081fd5b6127ce84612614565b92506127dc60208501612614565b9150604084013590509250925092565b60008060008060808587031215612801578081fd5b61280a85612614565b935061281860208601612614565b925060408501359150606085013567ffffffffffffffff81111561283a578182fd5b612846878288016126fe565b91505092959194509250565b60008060408385031215612864578182fd5b61286d83612614565b915060208301358015158114612881578182fd5b809150509250929050565b6000806040838503121561289e578182fd5b6128a783612614565b946020939093013593505050565b6000806000606084860312156128c9578283fd5b6128d284612614565b925060208401359150604084013567ffffffffffffffff8111156128f4578182fd5b612900868287016126fe565b9150509250925092565b6000806040838503121561291c578182fd5b823567ffffffffffffffff80821115612933578384fd5b61293f8683870161262b565b93506020850135915080821115612954578283fd5b50612961858286016126a0565b9150509250929050565b60008060006060848603121561297f578081fd5b833567ffffffffffffffff80821115612996578283fd5b6129a28783880161262b565b94506020915081860135818111156129b8578384fd5b6129c4888289016126a0565b9450506040860135818111156129d8578384fd5b86019050601f810187136129ea578283fd5b80356129f861264982612da6565b81815283810190838501865b84811015612a2d57612a1b8c8884358901016126fe565b84529286019290860190600101612a04565b505080955050505050509250925092565b600060208284031215612a4f578081fd5b81356001600160e01b03198116811461123b578182fd5b600060208284031215612a77578081fd5b813567ffffffffffffffff811115612a8d578182fd5b6117d5848285016126fe565b600080600060608486031215612aad578081fd5b833567ffffffffffffffff80821115612ac4578283fd5b9085019060608288031215612ad7578283fd5b604051606081018181108382111715612aec57fe5b604052612af883612614565b815260208301356020820152604083013582811115612b15578485fd5b612b21898286016126fe565b60408301525080955050602086013593506040860135915080821115612b45578283fd5b50612900868287016126fe565b600060208284031215612b63578081fd5b5035919050565b600080600060608486031215612b7e578081fd5b835160ff81168114612b8e578182fd5b602085015160409095015190969495509392505050565b6001600160a01b0391909116815260200190565b901515815260200190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015612c0e57858101830151858201604001528201612bf2565b81811115612c1f5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601a908201527f4549503731323a20696c6c6567616c207369676e61747572652e000000000000604082015260600190565b60208082526028908201527f4552433732313a206163636f756e747320616e6420696473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60208082526024908201527f4552433732313a207572697320616e6420696473206c656e677468206d69736d6040820152630c2e8c6d60e31b606082015260800190565b60208082526016908201527522a4a81b98991d1032bc3834b932b2103737b731b29760511b604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b60405181810167ffffffffffffffff81118282101715612d9e57fe5b604052919050565b600067ffffffffffffffff821115612dba57fe5b506020908102019056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e456d706c6f7961626c653a204e6f742061636365737369626c650000000000004552433732313a20617070726f76616c20746f2063757272656e74206f776e6572a26469706673582212205651d34f5a91e0a8ccfbf35b3accb4b6dc1029901df785fe176e2af372881cc464736f6c63430007050033";

type IDAuthTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IDAuthTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IDAuthToken__factory extends ContractFactory {
  constructor(...args: IDAuthTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    chainId: PromiseOrValue<BigNumberish>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IDAuthToken> {
    return super.deploy(
      chainId,
      version,
      overrides || {}
    ) as Promise<IDAuthToken>;
  }
  override getDeployTransaction(
    chainId: PromiseOrValue<BigNumberish>,
    version: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(chainId, version, overrides || {});
  }
  override attach(address: string): IDAuthToken {
    return super.attach(address) as IDAuthToken;
  }
  override connect(signer: Signer): IDAuthToken__factory {
    return super.connect(signer) as IDAuthToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IDAuthTokenInterface {
    return new utils.Interface(_abi) as IDAuthTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDAuthToken {
    return new Contract(address, _abi, signerOrProvider) as IDAuthToken;
  }
}
