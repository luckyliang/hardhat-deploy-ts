/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StaticERC721,
  StaticERC721Interface,
} from "../../../../contracts/Wyvern/static/StaticERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall[2]",
        name: "howToCalls",
        type: "uint8[2]",
      },
      {
        internalType: "uint256[6]",
        name: "uints",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "counterdata",
        type: "bytes",
      },
    ],
    name: "swapOneForOneERC721",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall[2]",
        name: "howToCalls",
        type: "uint8[2]",
      },
      {
        internalType: "uint256[6]",
        name: "uints",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "counterdata",
        type: "bytes",
      },
    ],
    name: "swapOneForOneERC721Decoding",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall",
        name: "howToCall",
        type: "uint8",
      },
      {
        internalType: "uint256[6]",
        name: "",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferERC721Exact",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extra",
        type: "bytes",
      },
      {
        internalType: "address[7]",
        name: "addresses",
        type: "address[7]",
      },
      {
        internalType: "enum AuthenticatedProxy.HowToCall",
        name: "howToCall",
        type: "uint8",
      },
      {
        internalType: "uint256[6]",
        name: "",
        type: "uint256[6]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferFromERC721Exact",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type StaticERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StaticERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StaticERC721__factory extends ContractFactory {
  constructor(...args: StaticERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StaticERC721> {
    return super.deploy(overrides || {}) as Promise<StaticERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StaticERC721 {
    return super.attach(address) as StaticERC721;
  }
  override connect(signer: Signer): StaticERC721__factory {
    return super.connect(signer) as StaticERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StaticERC721Interface {
    return new utils.Interface(_abi) as StaticERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StaticERC721 {
    return new Contract(address, _abi, signerOrProvider) as StaticERC721;
  }
}
