/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721WithSetUpdateOperatorMock,
  ERC721WithSetUpdateOperatorMockInterface,
} from "../../../../contracts/mocks/token/ERC721WithSetUpdateOperatorMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "setUpdateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a8152694552433732314d6f636b60b01b60208083019182528351808501909452600b84526a4d4f434b2d45524337323160a81b908401528151919291620000679160009162000086565b5080516200007d90600190602084019062000086565b50505062000169565b82805462000094906200012c565b90600052602060002090601f016020900481019282620000b8576000855562000103565b82601f10620000d357805160ff191683800117855562000103565b8280016001018555821562000103579182015b8281111562000103578251825591602001919060010190620000e6565b506200011192915062000115565b5090565b5b8082111562000111576000815560010162000116565b600181811c908216806200014157607f821691505b602082108114156200016357634e487b7160e01b600052602260045260246000fd5b50919050565b61143980620001796000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063b0b02c6011610066578063b0b02c60146101ff578063b88d4fde14610211578063c87b56dd14610224578063e985e9c51461023757600080fd5b80636352211e146101b057806370a08231146101c357806395d89b41146101e4578063a22cb465146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806340c10f191461018a57806342842e0e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610f54565b610273565b60405190151581526020015b60405180910390f35b61012a6102c5565b6040516101199190610fc9565b61014a610145366004610fdc565b610357565b6040516001600160a01b039091168152602001610119565b610175610170366004611011565b61037e565b005b61017561018536600461103b565b610499565b610175610198366004611011565b6104ca565b6101756101ab36600461103b565b6104d4565b61014a6101be366004610fdc565b6104ef565b6101d66101d1366004611077565b61054f565b604051908152602001610119565b61012a6105d5565b6101756101fa366004611092565b6105e4565b61017561020d3660046110ce565b5050565b61017561021f366004611110565b6105ef565b61012a610232366004610fdc565b610627565b61010d6102453660046111ec565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102a457506001600160e01b03198216635b5e139f60e01b145b806102bf57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102d490611216565b80601f016020809104026020016040519081016040528092919081815260200182805461030090611216565b801561034d5780601f106103225761010080835404028352916020019161034d565b820191906000526020600020905b81548152906001019060200180831161033057829003601f168201915b5050505050905090565b60006103628261069b565b506000908152600460205260409020546001600160a01b031690565b6000610389826104ef565b9050806001600160a01b0316836001600160a01b031614156103fc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041857506104188133610245565b61048a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f3565b61049483836106fd565b505050565b6104a3338261076b565b6104bf5760405162461bcd60e51b81526004016103f390611251565b6104948383836107ea565b61020d828261095b565b610494838383604051806020016040528060008152506105ef565b6000818152600260205260408120546001600160a01b0316806102bf5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f3565b60006001600160a01b0382166105b95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f3565b506001600160a01b031660009081526003602052604090205490565b6060600180546102d490611216565b61020d338383610975565b6105f9338361076b565b6106155760405162461bcd60e51b81526004016103f390611251565b61062184848484610a44565b50505050565b60606106328261069b565b600061064960408051602081019091526000815290565b905060008151116106695760405180602001604052806000815250610694565b8061067384610a77565b60405160200161068492919061129e565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166106fa5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f3565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610732826104ef565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610777836104ef565b9050806001600160a01b0316846001600160a01b031614806107be57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107e25750836001600160a01b03166107d784610357565b6001600160a01b0316145b949350505050565b826001600160a01b03166107fd826104ef565b6001600160a01b0316146108235760405162461bcd60e51b81526004016103f3906112cd565b6001600160a01b0382166108855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f3565b6108928383836001610b14565b826001600160a01b03166108a5826104ef565b6001600160a01b0316146108cb5760405162461bcd60e51b81526004016103f3906112cd565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61020d828260405180602001604052806000815250610b9c565b816001600160a01b0316836001600160a01b031614156109d75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a4f8484846107ea565b610a5b84848484610bcf565b6106215760405162461bcd60e51b81526004016103f390611312565b60606000610a8483610ccd565b600101905060008167ffffffffffffffff811115610aa457610aa46110fa565b6040519080825280601f01601f191660200182016040528015610ace576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b0757610b0c565b610ad8565b509392505050565b6001811115610621576001600160a01b03841615610b5a576001600160a01b03841660009081526003602052604081208054839290610b5490849061137a565b90915550505b6001600160a01b03831615610621576001600160a01b03831660009081526003602052604081208054839290610b91908490611391565b909155505050505050565b610ba68383610da5565b610bb36000848484610bcf565b6104945760405162461bcd60e51b81526004016103f390611312565b60006001600160a01b0384163b15610cc257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c139033908990889088906004016113a9565b6020604051808303816000875af1925050508015610c4e575060408051601f3d908101601f19168201909252610c4b918101906113e6565b60015b610ca8573d808015610c7c576040519150601f19603f3d011682016040523d82523d6000602084013e610c81565b606091505b508051610ca05760405162461bcd60e51b81526004016103f390611312565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107e2565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610d0c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610d38576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d5657662386f26fc10000830492506010015b6305f5e1008310610d6e576305f5e100830492506008015b6127108310610d8257612710830492506004015b60648310610d94576064830492506002015b600a83106102bf5760010192915050565b6001600160a01b038216610dfb5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f3565b6000818152600260205260409020546001600160a01b031615610e605760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f3565b610e6e600083836001610b14565b6000818152600260205260409020546001600160a01b031615610ed35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f3565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146106fa57600080fd5b600060208284031215610f6657600080fd5b813561069481610f3e565b60005b83811015610f8c578181015183820152602001610f74565b838111156106215750506000910152565b60008151808452610fb5816020860160208601610f71565b601f01601f19169290920160200192915050565b6020815260006106946020830184610f9d565b600060208284031215610fee57600080fd5b5035919050565b80356001600160a01b038116811461100c57600080fd5b919050565b6000806040838503121561102457600080fd5b61102d83610ff5565b946020939093013593505050565b60008060006060848603121561105057600080fd5b61105984610ff5565b925061106760208501610ff5565b9150604084013590509250925092565b60006020828403121561108957600080fd5b61069482610ff5565b600080604083850312156110a557600080fd5b6110ae83610ff5565b9150602083013580151581146110c357600080fd5b809150509250929050565b600080604083850312156110e157600080fd5b823591506110f160208401610ff5565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561112657600080fd5b61112f85610ff5565b935061113d60208601610ff5565b925060408501359150606085013567ffffffffffffffff8082111561116157600080fd5b818701915087601f83011261117557600080fd5b813581811115611187576111876110fa565b604051601f8201601f19908116603f011681019083821181831017156111af576111af6110fa565b816040528281528a60208487010111156111c857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156111ff57600080fd5b61120883610ff5565b91506110f160208401610ff5565b600181811c9082168061122a57607f821691505b6020821081141561124b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516112b0818460208801610f71565b8351908301906112c4818360208801610f71565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561138c5761138c611364565b500390565b600082198211156113a4576113a4611364565b500190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113dc90830184610f9d565b9695505050505050565b6000602082840312156113f857600080fd5b815161069481610f3e56fea2646970667358221220972d35e3b8fcc407683ddf39c65bab1133304c9f54dddaed217d38ffb3ca0f9d64736f6c634300080a0033";

type ERC721WithSetUpdateOperatorMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WithSetUpdateOperatorMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721WithSetUpdateOperatorMock__factory extends ContractFactory {
  constructor(...args: ERC721WithSetUpdateOperatorMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721WithSetUpdateOperatorMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721WithSetUpdateOperatorMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721WithSetUpdateOperatorMock {
    return super.attach(address) as ERC721WithSetUpdateOperatorMock;
  }
  override connect(signer: Signer): ERC721WithSetUpdateOperatorMock__factory {
    return super.connect(signer) as ERC721WithSetUpdateOperatorMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WithSetUpdateOperatorMockInterface {
    return new utils.Interface(
      _abi
    ) as ERC721WithSetUpdateOperatorMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721WithSetUpdateOperatorMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721WithSetUpdateOperatorMock;
  }
}
