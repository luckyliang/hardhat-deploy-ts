/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReentrancyTransactionGuard,
  ReentrancyTransactionGuardInterface,
} from "../../../../contracts/examples/guards/ReentrancyTransactionGuard";

const _abi = [
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004357806375f0bb521461006a578063932713681461007d575b005b610056610051366004610346565b6100b8565b604051901515815260200160405180910390f35b61004161007836600461022c565b6100ef565b61004161008b366004610311565b50507f7c1d45961c2d0298f999d2c3d4a7a5e0f688d137f4c32466e3056a97e673b83a805460ff19169055565b60006001600160e01b0319821663736bd41d60e11b14806100e957506001600160e01b031982166301ffc9a760e01b145b92915050565b7f7c1d45961c2d0298f999d2c3d4a7a5e0f688d137f4c32466e3056a97e673b83a805460ff161561015c5760405162461bcd60e51b81526020600482015260136024820152721499595b9d1c985b98de4819195d1958dd1959606a1b604482015260640160405180910390fd5b805460ff191660011790555050505050505050505050565b80356001600160a01b038116811461018b57600080fd5b919050565b600082601f8301126101a157600080fd5b813567ffffffffffffffff808211156101bc576101bc610377565b604051601f8301601f19908116603f011681019082821181831017156101e4576101e4610377565b816040528381528660208588010111156101fd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356002811061018b57600080fd5b60008060008060008060008060008060006101608c8e03121561024e57600080fd5b6102578c610174565b9a5060208c0135995067ffffffffffffffff8060408e0135111561027a57600080fd5b61028a8e60408f01358f01610190565b995061029860608e0161021d565b985060808d0135975060a08d0135965060c08d013595506102bb60e08e01610174565b94506102ca6101008e01610174565b9350806101208e013511156102de57600080fd5b506102f08d6101208e01358e01610190565b91506102ff6101408d01610174565b90509295989b509295989b9093969950565b6000806040838503121561032457600080fd5b823591506020830135801515811461033b57600080fd5b809150509250929050565b60006020828403121561035857600080fd5b81356001600160e01b03198116811461037057600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207033603f5a9ac320238fdd0a696958a59252c9fc6abf61e0ae88cd5ddbc0f57264736f6c63430008070033";

type ReentrancyTransactionGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentrancyTransactionGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentrancyTransactionGuard__factory extends ContractFactory {
  constructor(...args: ReentrancyTransactionGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReentrancyTransactionGuard> {
    return super.deploy(overrides || {}) as Promise<ReentrancyTransactionGuard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReentrancyTransactionGuard {
    return super.attach(address) as ReentrancyTransactionGuard;
  }
  override connect(signer: Signer): ReentrancyTransactionGuard__factory {
    return super.connect(signer) as ReentrancyTransactionGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentrancyTransactionGuardInterface {
    return new utils.Interface(_abi) as ReentrancyTransactionGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentrancyTransactionGuard {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReentrancyTransactionGuard;
  }
}
