/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155Token,
  ERC1155TokenInterface,
} from "../../../contracts/test/ERC1155Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107a5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100405760003560e01c8062fdd58e14610045578063731133e91461006a578063f242432a1461007f575b600080fd5b6100586100533660046105e8565b610092565b60405190815260200160405180910390f35b61007d610078366004610612565b610129565b005b61007d61008d366004610570565b610222565b60006001600160a01b0383166101035760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b6001600160a01b0385166101895760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016100fa565b6000848152602081815260408083206001600160a01b03891684529091529020546101b4908461072a565b6000858152602081815260408083206001600160a01b038a1684528252808320939093558251601f850182900482028101820190935283835261021b9233929189918991899190899089908190840183828082843760009201919091525061040b92505050565b5050505050565b6001600160a01b0385166102895760405162461bcd60e51b815260206004820152602860248201527f455243313135353a207461726765742061646472657373206d757374206265206044820152676e6f6e2d7a65726f60c01b60648201526084016100fa565b6001600160a01b0386163314806102c757506001600160a01b03861660009081526001602081815260408084203385529091529091205460ff161515145b6103395760405162461bcd60e51b815260206004820152603860248201527f455243313135353a206e656564206f70657261746f7220617070726f76616c2060448201527f666f7220337264207061727479207472616e73666572732e000000000000000060648201526084016100fa565b6000848152602081815260408083206001600160a01b038a168452909152902054610365908490610742565b6000858152602081815260408083206001600160a01b038b8116855292528083209390935587168152205461039a908461072a565b6000858152602081815260408083206001600160a01b038a168452825291829020929092558051601f8401839004830281018301909152828152610403913391899189918991899190899089908190840183828082843760009201919091525061040b92505050565b505050505050565b833b156104035760405163f23a6e6160e01b808252906001600160a01b0386169063f23a6e6190610448908a908a908990899089906004016106ab565b602060405180830381600087803b15801561046257600080fd5b505af1158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a919061067a565b6001600160e01b031916146104035760405162461bcd60e51b815260206004820152603160248201527f455243313135353a20676f7420756e6b6e6f776e2076616c75652066726f6d206044820152701bdb915490cc4c4d4d549958d95a5d9959607a1b60648201526084016100fa565b80356001600160a01b038116811461052257600080fd5b919050565b60008083601f84011261053957600080fd5b50813567ffffffffffffffff81111561055157600080fd5b60208301915083602082850101111561056957600080fd5b9250929050565b60008060008060008060a0878903121561058957600080fd5b6105928761050b565b95506105a06020880161050b565b94506040870135935060608701359250608087013567ffffffffffffffff8111156105ca57600080fd5b6105d689828a01610527565b979a9699509497509295939492505050565b600080604083850312156105fb57600080fd5b6106048361050b565b946020939093013593505050565b60008060008060006080868803121561062a57600080fd5b6106338661050b565b94506020860135935060408601359250606086013567ffffffffffffffff81111561065d57600080fd5b61066988828901610527565b969995985093965092949392505050565b60006020828403121561068c57600080fd5b81516001600160e01b0319811681146106a457600080fd5b9392505050565b600060018060a01b03808816835260208188168185015286604085015285606085015260a06080850152845191508160a085015260005b828110156106fe5785810182015185820160c0015281016106e2565b8281111561071057600060c084870101525b5050601f01601f19169190910160c0019695505050505050565b6000821982111561073d5761073d610759565b500190565b60008282101561075457610754610759565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122075923a51df8aabfc33561f99c26271950187190210eee718efd401347f588ca664736f6c63430008070033";

type ERC1155TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Token__factory extends ContractFactory {
  constructor(...args: ERC1155TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Token> {
    return super.deploy(overrides || {}) as Promise<ERC1155Token>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Token {
    return super.attach(address) as ERC1155Token;
  }
  override connect(signer: Signer): ERC1155Token__factory {
    return super.connect(signer) as ERC1155Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TokenInterface {
    return new utils.Interface(_abi) as ERC1155TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Token {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Token;
  }
}
