/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestSingleton,
  TestSingletonInterface,
} from "../../../contracts/test/TestSingleton";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "forward",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterCopy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600180546001600160a01b03191633179055610353806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806302d05d3f1461005c578063392e53cd1461008c5780636fadcf72146100b0578063a619486e146100d0578063e1c7392a146100d7575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100a090600160a01b900460ff1681565b6040519015158152602001610083565b6100c36100be3660046101b8565b6100e1565b60405161008391906102a4565b600061006f565b6100df610146565b005b6060826001600160a01b0316826040516100fb9190610288565b6000604051808303816000865af19150503d8060008114610138576040519150601f19603f3d011682016040523d82523d6000602084013e61013d565b606091505b50949350505050565b600154600160a01b900460ff16156101955760405162461bcd60e51b815260206004820152600e60248201526d125cc81a5b9a5d1a585b1a5e995960921b604482015260640160405180910390fd5b6001805460ff60a01b1933166001600160a81b031990911617600160a01b179055565b600080604083850312156101cb57600080fd5b82356001600160a01b03811681146101e257600080fd5b9150602083013567ffffffffffffffff808211156101ff57600080fd5b818501915085601f83011261021357600080fd5b81358181111561022557610225610307565b604051601f8201601f19908116603f0116810190838211818310171561024d5761024d610307565b8160405282815288602084870101111561026657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825161029a8184602087016102d7565b9190910192915050565b60208152600082518060208401526102c38160408501602087016102d7565b601f01601f19169190910160400192915050565b60005b838110156102f25781810151838201526020016102da565b83811115610301576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c98c74b268677bd676f91f7312a60b04701dd1041b6a95a502d12de0378d194464736f6c63430008070033";

type TestSingletonConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestSingletonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestSingleton__factory extends ContractFactory {
  constructor(...args: TestSingletonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TestSingleton> {
    return super.deploy(overrides || {}) as Promise<TestSingleton>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestSingleton {
    return super.attach(address) as TestSingleton;
  }
  override connect(signer: Signer): TestSingleton__factory {
    return super.connect(signer) as TestSingleton__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestSingletonInterface {
    return new utils.Interface(_abi) as TestSingletonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestSingleton {
    return new Contract(address, _abi, signerOrProvider) as TestSingleton;
  }
}
