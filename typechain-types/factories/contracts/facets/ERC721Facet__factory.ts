/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Facet,
  ERC721FacetInterface,
} from "../../../contracts/facets/ERC721Facet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ClaimRentFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ConsumerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "SetBaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "consumer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "changeConsumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "consumerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "initERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061212e806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636c0360eb116100ad578063a22cb46511610071578063a22cb46514610260578063b88d4fde14610273578063c87b56dd14610286578063e589233114610299578063e985e9c5146102ac57600080fd5b80636c0360eb1461021757806370a082311461021f57806370b5aecb1461023257806395d89b41146102455780639d3f251a1461024d57600080fd5b80632f745c59116100f45780632f745c59146101b857806342842e0e146101cb5780634f6ccce7146101de57806355f804b3146101f15780636352211e1461020457600080fd5b806306fdde0314610131578063081812fc1461014f578063095ea7b31461017a57806318160ddd1461018f57806323b872dd146101a5575b600080fd5b6101396102cf565b6040516101469190611b45565b60405180910390f35b61016261015d366004611b58565b61036a565b6040516001600160a01b039091168152602001610146565b61018d610188366004611b8d565b61037b565b005b610197610496565b604051908152602001610146565b61018d6101b3366004611bb7565b6104a9565b6101976101c6366004611b8d565b6104ec565b61018d6101d9366004611bb7565b61058e565b6101976101ec366004611b58565b6105a9565b61018d6101ff366004611bf3565b610644565b610162610212366004611b58565b6106a4565b6101396106af565b61019761022d366004611c65565b6106c7565b61018d610240366004611b8d565b6106d2565b610139610767565b61018d61025b366004611d2c565b61077f565b61018d61026e366004611dc5565b61083c565b61018d610281366004611dfc565b610918565b610139610294366004611b58565b610956565b6101626102a7366004611b58565b610a21565b6102bf6102ba366004611e78565b610a2c565b6040519015158152602001610146565b60606102d9610a38565b60010180546102e790611eab565b80601f016020809104026020016040519081016040528092919081815260200182805461031390611eab565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b600061037582610a5c565b92915050565b6000610386826106a4565b9050806001600160a01b0316836001600160a01b031614156103f95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041557506104158133610a2c565b6104875760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103f0565b6104918383610aed565b505050565b60006104a0610a38565b600c0154919050565b806104b381610b68565b50506104bf3383610c77565b6104db5760405162461bcd60e51b81526004016103f090611ee6565b6104e6848484610d41565b50505050565b60006104f7836106c7565b82106105595760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103f0565b610561610a38565b6001600160a01b03939093166000908152600a909301602090815260408085209385529290525090205490565b61049183838360405180602001604052806000815250610918565b60006105b3610496565b82106106165760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103f0565b61061e610a38565b600c01828154811061063257610632611f37565b90600052602060002001549050919050565b61064c610f02565b8181610656610a38565b60030191906106669291906119e0565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa8282604051610698929190611f4d565b60405180910390a15050565b600061037582610f79565b60606106b9610a38565b60030180546102e790611eab565b600061037582611001565b6106dc3382610c77565b610750576040805162461bcd60e51b81526020600482015260248101919091527f455243373231436f6e73756d65723a206368616e676520636f6e73756d65722060448201527f63616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656460648201526084016103f0565b61076361075c826106a4565b8383611096565b5050565b6060610771610a38565b60020180546102e790611eab565b6000610789610a38565b805490915060ff16156107e95760405162461bcd60e51b815260206004820152602260248201527f4552433732312053746f7261676520616c726561647920696e697469616c697a604482015261195960f21b60648201526084016103f0565b805460ff1916600190811782558451610809918301906020870190611a64565b50825161081f9060028301906020860190611a64565b5081516108359060038301906020850190611a64565b5050505050565b6001600160a01b0382163314156108955760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f0565b8061089e610a38565b336000818152600892909201602090815260408084206001600160a01b038816808652925292839020805494151560ff199095169490941790935590517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061090c90851515815260200190565b60405180910390a35050565b8161092281610b68565b505061092e3384610c77565b61094a5760405162461bcd60e51b81526004016103f090611ee6565b61083585858585611105565b606061096182611138565b6109c55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103f0565b60006109cf6106af565b905060008151116109ef5760405180602001604052806000815250610a1a565b806109f984611166565b604051602001610a0a929190611f7c565b6040516020818303038152906040525b9392505050565b600061037582611203565b6000610a1a838361129c565b7fead7485caf5f3be13698f775d295954588c5e11a5dad4f8c6640595d9a0cc46a90565b6000610a6782611138565b610ac85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103f0565b610ad0610a38565b60009283526007016020525060409020546001600160a01b031690565b81610af6610a38565b60008381526007919091016020526040902080546001600160a01b0319166001600160a01b0392831617905581908316610b2f82610f79565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008181527f0a9d4881d6513ea484cc5630de44314cca750c9a2c1407addd3eebd4cb38205560209081526040808320600301547f3edf7e48c941a251579fc686bc2f4eca23df9bf60f08e5fe8ad25af5660cca2183528184206001600160a01b039091168085529252822080549083905582919080610bec579094909350915050565b6000610bf786611203565b90506001600160a01b038116610c1357610c1086610f79565b90505b610c1e8382846112d9565b806001600160a01b0316836001600160a01b0316877f3d5971fa9da202801ea7b636399b6d073418176344e3de9134cebd23432db9d285604051610c6491815260200190565b60405180910390a4509094909350915050565b6000610c8282611138565b610ce35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103f0565b6000610cee83610f79565b9050806001600160a01b0316846001600160a01b03161480610d295750836001600160a01b0316610d1e84610a5c565b6001600160a01b0316145b80610d395750610d39818561129c565b949350505050565b826001600160a01b0316610d5482610f79565b6001600160a01b031614610dbc5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103f0565b6001600160a01b038216610e1e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f0565b610e29838383611335565b610e34600082610aed565b6000610e3e610a38565b6001600160a01b038516600090815260068201602052604081208054929350600192909190610e6e908490611fc1565b90915550506001600160a01b03831660009081526006820160205260408120805460019290610e9e908490611fd8565b9091555050600082815260058201602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a450505050565b7faba9fab218e99d82c4cdc7f8050a7ec15e88f8ccb78565ad22c8882d1563dfd6600401546001600160a01b03163314610f775760405162461bcd60e51b815260206004820152601660248201527526bab9ba1031329031b7b73a3930b1ba1037bbb732b960511b60448201526064016103f0565b565b600080610f84610a38565b600084815260059190910160205260409020546001600160a01b03169050806103755760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103f0565b60006001600160a01b03821661106c5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103f0565b611074610a38565b6001600160a01b03909216600090815260069290920160205250604090205490565b60006110a0610a38565b600083815260098201602052604080822080546001600160a01b0319166001600160a01b03888116918217909255915193945085939192908816917f42ef856c2602f37ce625d252830bed486c5c8e9a4de8aa36cc3d15f304eb662b9190a450505050565b611110848484610d41565b61111c848484846113bf565b6104e65760405162461bcd60e51b81526004016103f090611ff0565b600080611143610a38565b60009384526005016020526040909220546001600160a01b031690911415919050565b60606000611173836114bd565b600101905060008167ffffffffffffffff81111561119357611193611c80565b6040519080825280601f01601f1916602001820160405280156111bd576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111f6576111fb565b6111c7565b509392505050565b600061120e82611138565b6112775760405162461bcd60e51b815260206004820152603460248201527f455243373231436f6e73756d65723a20636f6e73756d6572207175657279206660448201527337b9103737b732bc34b9ba32b73a103a37b5b2b760611b60648201526084016103f0565b61127f610a38565b60009283526009016020525060409020546001600160a01b031690565b60006112a6610a38565b6001600160a01b039384166000908152600891909101602090815260408083209490951682529290925250205460ff1690565b6001600160a01b03831660011415611321576040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156104e6573d6000803e3d6000fd5b6104916001600160a01b0384168383611595565b6001600160a01b0383166113515761134c816115e7565b611374565b816001600160a01b0316836001600160a01b031614611374576113748382611620565b6001600160a01b0382166113905761138b816116d4565b6113b3565b826001600160a01b0316826001600160a01b0316146113b3576113b3828261179d565b61049183600083611096565b60006001600160a01b0384163b156114b257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611403903390899088908890600401612042565b6020604051808303816000875af192505050801561143e575060408051601f3d908101601f1916820190925261143b9181019061207f565b60015b611498573d80801561146c576040519150601f19603f3d011682016040523d82523d6000602084013e611471565b606091505b5080516114905760405162461bcd60e51b81526004016103f090611ff0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d39565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114fc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611528576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061154657662386f26fc10000830492506010015b6305f5e100831061155e576305f5e100830492506008015b612710831061157257612710830492506004015b60648310611584576064830492506002015b600a83106103755760010192915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104919084906117ee565b60006115f1610a38565b600c810180546000858152600d9093016020908152604084208290556001820183559183529120019190915550565b6000600161162d84611001565b6116379190611fc1565b90506000611643610a38565b6000848152600b8201602052604090205490915082811461169c576001600160a01b0385166000908152600a8301602090815260408083208684528252808320548484528184208190558352600b850190915290208190555b506000928352600b8101602090815260408085208590556001600160a01b039095168452600a90910181528383209183525290812055565b60006116de610a38565b600c8101549091506000906116f590600190611fc1565b6000848152600d84016020526040812054600c8501805493945090928490811061172157611721611f37565b906000526020600020015490508084600c01838154811061174457611744611f37565b6000918252602080832090910192909255828152600d86019091526040808220849055868252812055600c8401805480611780576117806120a9565b600190038181906000526020600020016000905590555050505050565b60006117a883611001565b905060006117b4610a38565b6001600160a01b039094166000908152600a8501602090815260408083208584528252808320869055948252600b90950190945250912055565b6000611843826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118c09092919063ffffffff16565b805190915015610491578080602001905181019061186191906120bf565b6104915760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103f0565b6060610d39848460008585600080866001600160a01b031685876040516118e791906120dc565b60006040518083038185875af1925050503d8060008114611924576040519150601f19603f3d011682016040523d82523d6000602084013e611929565b606091505b509150915061193a87838387611945565b979650505050505050565b606083156119b15782516119aa576001600160a01b0385163b6119aa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103f0565b5081610d39565b610d3983838151156119c65781518083602001fd5b8060405162461bcd60e51b81526004016103f09190611b45565b8280546119ec90611eab565b90600052602060002090601f016020900481019282611a0e5760008555611a54565b82601f10611a275782800160ff19823516178555611a54565b82800160010185558215611a54579182015b82811115611a54578235825591602001919060010190611a39565b50611a60929150611ad8565b5090565b828054611a7090611eab565b90600052602060002090601f016020900481019282611a925760008555611a54565b82601f10611aab57805160ff1916838001178555611a54565b82800160010185558215611a54579182015b82811115611a54578251825591602001919060010190611abd565b5b80821115611a605760008155600101611ad9565b60005b83811015611b08578181015183820152602001611af0565b838111156104e65750506000910152565b60008151808452611b31816020860160208601611aed565b601f01601f19169290920160200192915050565b602081526000610a1a6020830184611b19565b600060208284031215611b6a57600080fd5b5035919050565b80356001600160a01b0381168114611b8857600080fd5b919050565b60008060408385031215611ba057600080fd5b611ba983611b71565b946020939093013593505050565b600080600060608486031215611bcc57600080fd5b611bd584611b71565b9250611be360208501611b71565b9150604084013590509250925092565b60008060208385031215611c0657600080fd5b823567ffffffffffffffff80821115611c1e57600080fd5b818501915085601f830112611c3257600080fd5b813581811115611c4157600080fd5b866020828501011115611c5357600080fd5b60209290920196919550909350505050565b600060208284031215611c7757600080fd5b610a1a82611b71565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611cb157611cb1611c80565b604051601f8501601f19908116603f01168101908282118183101715611cd957611cd9611c80565b81604052809350858152868686011115611cf257600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d1d57600080fd5b610a1a83833560208501611c96565b600080600060608486031215611d4157600080fd5b833567ffffffffffffffff80821115611d5957600080fd5b611d6587838801611d0c565b94506020860135915080821115611d7b57600080fd5b611d8787838801611d0c565b93506040860135915080821115611d9d57600080fd5b50611daa86828701611d0c565b9150509250925092565b8015158114611dc257600080fd5b50565b60008060408385031215611dd857600080fd5b611de183611b71565b91506020830135611df181611db4565b809150509250929050565b60008060008060808587031215611e1257600080fd5b611e1b85611b71565b9350611e2960208601611b71565b925060408501359150606085013567ffffffffffffffff811115611e4c57600080fd5b8501601f81018713611e5d57600080fd5b611e6c87823560208401611c96565b91505092959194509250565b60008060408385031215611e8b57600080fd5b611e9483611b71565b9150611ea260208401611b71565b90509250929050565b600181811c90821680611ebf57607f821691505b60208210811415611ee057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008351611f8e818460208801611aed565b835190830190611fa2818360208801611aed565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611fd357611fd3611fab565b500390565b60008219821115611feb57611feb611fab565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207590830184611b19565b9695505050505050565b60006020828403121561209157600080fd5b81516001600160e01b031981168114610a1a57600080fd5b634e487b7160e01b600052603160045260246000fd5b6000602082840312156120d157600080fd5b8151610a1a81611db4565b600082516120ee818460208701611aed565b919091019291505056fea2646970667358221220dc8575a80ccb06eca2e4d9f6cc5f6233371e9c46fdb7257a2d37ce92f85cff7264736f6c634300080a0033";

type ERC721FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Facet__factory extends ContractFactory {
  constructor(...args: ERC721FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Facet> {
    return super.deploy(overrides || {}) as Promise<ERC721Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Facet {
    return super.attach(address) as ERC721Facet;
  }
  override connect(signer: Signer): ERC721Facet__factory {
    return super.connect(signer) as ERC721Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721FacetInterface {
    return new utils.Interface(_abi) as ERC721FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Facet {
    return new Contract(address, _abi, signerOrProvider) as ERC721Facet;
  }
}
