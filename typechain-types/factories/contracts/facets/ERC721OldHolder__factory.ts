/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721OldHolder,
  ERC721OldHolderInterface,
} from "../../../contracts/facets/ERC721OldHolder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f0b9e5ba14610030575b600080fd5b61004d61003e366004610080565b63785cf2dd60e11b9392505050565b6040516001600160e01b0319909116815260200160405180910390f35b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561009557600080fd5b83356001600160a01b03811681146100ac57600080fd5b925060208401359150604084013567ffffffffffffffff808211156100d057600080fd5b818601915086601f8301126100e457600080fd5b8135818111156100f6576100f661006a565b604051601f8201601f19908116603f0116810190838211818310171561011e5761011e61006a565b8160405282815289602084870101111561013757600080fd5b826020860160208301376000602084830101528095505050505050925092509256fea2646970667358221220a3874f8117df97bf402b26bdd8efa7b4cd6e9aba993ffa8e73329c652e94d06464736f6c634300080a0033";

type ERC721OldHolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721OldHolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721OldHolder__factory extends ContractFactory {
  constructor(...args: ERC721OldHolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721OldHolder> {
    return super.deploy(overrides || {}) as Promise<ERC721OldHolder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721OldHolder {
    return super.attach(address) as ERC721OldHolder;
  }
  override connect(signer: Signer): ERC721OldHolder__factory {
    return super.connect(signer) as ERC721OldHolder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721OldHolderInterface {
    return new utils.Interface(_abi) as ERC721OldHolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721OldHolder {
    return new Contract(address, _abi, signerOrProvider) as ERC721OldHolder;
  }
}
