/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../contracts/facets/DiamondCutFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061149c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610e9a565b610045565b005b61004d61009e565b61009761005a8587610fe0565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061010892505050565b5050505050565b600080516020611447833981519152600401546001600160a01b031633146101065760405162461bcd60e51b815260206004820152601660248201527526bab9ba1031329031b7b73a3930b1ba1037bbb732b960511b60448201526064015b60405180910390fd5b565b60005b83518110156102d157600084828151811061012857610128611124565b6020026020010151602001519050600060028111156101495761014961113a565b81600281111561015b5761015b61113a565b14156101aa576101a585838151811061017657610176611124565b60200260200101516000015186848151811061019457610194611124565b60200260200101516040015161031c565b6102be565b60018160028111156101be576101be61113a565b1415610208576101a58583815181106101d9576101d9611124565b6020026020010151600001518684815181106101f7576101f7611124565b602002602001015160400151610491565b600281600281111561021c5761021c61113a565b1415610266576101a585838151811061023757610237611124565b60200260200101516000015186848151811061025557610255611124565b60200260200101516040015161061f565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100fd565b50806102c981611166565b91505061010b565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051610305939291906111d9565b60405180910390a1610317828261073d565b505050565b600081511161033d5760405162461bcd60e51b81526004016100fd906112d9565b6000805160206114478339815191526001600160a01b0383166103725760405162461bcd60e51b81526004016100fd90611324565b6001600160a01b03831660009081526001820160205260409020546001600160601b0381166103a5576103a5828561094a565b60005b83518110156100975760008482815181106103c5576103c5611124565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104635760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100fd565b61046f8583868a6109b4565b8361047981611370565b9450505050808061048990611166565b9150506103a8565b60008151116104b25760405162461bcd60e51b81526004016100fd906112d9565b6000805160206114478339815191526001600160a01b0383166104e75760405162461bcd60e51b81526004016100fd90611324565b6001600160a01b03831660009081526001820160205260409020546001600160601b03811661051a5761051a828561094a565b60005b835181101561009757600084828151811061053a5761053a611124565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168114156105e65760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100fd565b6105f1858284610a54565b6105fd8583868a6109b4565b8361060781611370565b9450505050808061061790611166565b91505061051d565b60008151116106405760405162461bcd60e51b81526004016100fd906112d9565b6000805160206114478339815191526001600160a01b038316156106c55760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100fd565b60005b82518110156107375760008382815181106106e5576106e5611124565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316610722848284610a54565b5050808061072f90611166565b9150506106c8565b50505050565b6001600160a01b0382166107c4578051156107c05760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100fd565b5050565b600081511161083b5760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100fd565b6001600160a01b038216301461086d5761086d826040518060600160405280602881526020016113fb60289139610e14565b600080836001600160a01b0316836040516108889190611397565b600060405180830381855af49150503d80600081146108c3576040519150601f19603f3d011682016040523d82523d6000602084013e6108c8565b606091505b509150915081610737578051156108f3578060405162461bcd60e51b81526004016100fd91906113b3565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016100fd565b61096c8160405180606001604052806024815260200161142360249139610e14565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b038216610ad05760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100fd565b6001600160a01b038216301415610b405760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016100fd565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b03169291610b8f916113cd565b9050808214610c81576001600160a01b03841660009081526001860160205260408120805483908110610bc457610bc4611124565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610c1557610c15611124565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610caa57610caa6113e4565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081205580610097576002850154600090610d09906001906113cd565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610db8576000876002018381548110610d4857610d48611124565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610d7957610d79611124565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610dcb57610dcb6113e4565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107375760405162461bcd60e51b81526004016100fd91906113b3565b80356001600160a01b0381168114610e4c57600080fd5b919050565b60008083601f840112610e6357600080fd5b50813567ffffffffffffffff811115610e7b57600080fd5b602083019150836020828501011115610e9357600080fd5b9250929050565b600080600080600060608688031215610eb257600080fd5b853567ffffffffffffffff80821115610eca57600080fd5b818801915088601f830112610ede57600080fd5b813581811115610eed57600080fd5b8960208260051b8501011115610f0257600080fd5b60208301975080965050610f1860208901610e35565b94506040880135915080821115610f2e57600080fd5b50610f3b88828901610e51565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610f8557610f85610f4c565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fb457610fb4610f4c565b604052919050565b600067ffffffffffffffff821115610fd657610fd6610f4c565b5060051b60200190565b6000610ff3610fee84610fbc565b610f8b565b83815260208082019190600586811b86013681111561101157600080fd5b865b8181101561111757803567ffffffffffffffff808211156110345760008081fd5b818a0191506060823603121561104a5760008081fd5b611052610f62565b61105b83610e35565b8152868301356003811061106f5760008081fd5b81880152604083810135838111156110875760008081fd5b939093019236601f85011261109e57600092508283fd5b833592506110ae610fee84610fbc565b83815292871b840188019288810190368511156110cb5760008081fd5b948901945b848610156111005785356001600160e01b0319811681146110f15760008081fd5b825294890194908901906110d0565b918301919091525088525050948301948301611013565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561117a5761117a611150565b5060010190565b60005b8381101561119c578181015183820152602001611184565b838111156107375750506000910152565b600081518084526111c5816020860160208601611181565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156112a957898403607f19018652815180516001600160a01b0316855283810151898601906003811061124857634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156112945783516001600160e01b031916825292860192600192909201919086019061126a565b50978501979550505090820190600101611202565b50506001600160a01b038a169088015286810360408801526112cb81896111ad565b9a9950505050505050505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b6020808252602c908201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260408201526b65206164647265737328302960a01b606082015260800190565b60006001600160601b038083168181141561138d5761138d611150565b6001019392505050565b600082516113a9818460208701611181565b9190910192915050565b6020815260006113c660208301846111ad565b9392505050565b6000828210156113df576113df611150565b500390565b634e487b7160e01b600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465aba9fab218e99d82c4cdc7f8050a7ec15e88f8ccb78565ad22c8882d1563dfd6a2646970667358221220b2ff22f3b43aa09be8a2c81293afd4bb3eeb9bbc68556d372ea3fa3ce12e96a564736f6c634300080a0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
