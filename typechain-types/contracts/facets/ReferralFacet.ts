/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export declare namespace LibReferral {
  export type MetaverseRegistryReferrerStruct = {
    referrer: PromiseOrValue<string>;
    percentage: PromiseOrValue<BigNumberish>;
  };

  export type MetaverseRegistryReferrerStructOutput = [string, number] & {
    referrer: string;
    percentage: number;
  };

  export type ReferrerPercentageStruct = {
    mainPercentage: PromiseOrValue<BigNumberish>;
    secondaryPercentage: PromiseOrValue<BigNumberish>;
  };

  export type ReferrerPercentageStructOutput = [number, number] & {
    mainPercentage: number;
    secondaryPercentage: number;
  };
}

export interface ReferralFacetInterface extends utils.Interface {
  functions: {
    "claimMultipleReferrerFees(address[])": FunctionFragment;
    "claimReferrerFee(address)": FunctionFragment;
    "metaverseRegistryReferrer(address)": FunctionFragment;
    "referralAdmin()": FunctionFragment;
    "referrerFee(address,address)": FunctionFragment;
    "referrerPercentage(address)": FunctionFragment;
    "setMetaverseRegistryReferrers(address[],address[],uint24[])": FunctionFragment;
    "setReferralAdmin(address)": FunctionFragment;
    "setReferrers(address[],uint24[],uint24[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "claimMultipleReferrerFees"
      | "claimReferrerFee"
      | "metaverseRegistryReferrer"
      | "referralAdmin"
      | "referrerFee"
      | "referrerPercentage"
      | "setMetaverseRegistryReferrers"
      | "setReferralAdmin"
      | "setReferrers"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "claimMultipleReferrerFees",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "claimReferrerFee",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "metaverseRegistryReferrer",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "referralAdmin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "referrerFee",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "referrerPercentage",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMetaverseRegistryReferrers",
    values: [
      PromiseOrValue<string>[],
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setReferralAdmin",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setReferrers",
    values: [
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "claimMultipleReferrerFees",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimReferrerFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaverseRegistryReferrer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "referralAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "referrerFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "referrerPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMetaverseRegistryReferrers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReferralAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReferrers",
    data: BytesLike
  ): Result;

  events: {
    "ClaimReferrerFee(address,address,uint256)": EventFragment;
    "SetMetaverseRegistryReferrer(address,address,uint24)": EventFragment;
    "SetReferralAdmin(address)": EventFragment;
    "SetReferrer(address,uint24,uint24)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ClaimReferrerFee"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetMetaverseRegistryReferrer"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetReferralAdmin"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetReferrer"): EventFragment;
}

export interface ClaimReferrerFeeEventObject {
  _claimer: string;
  _token: string;
  _amount: BigNumber;
}
export type ClaimReferrerFeeEvent = TypedEvent<
  [string, string, BigNumber],
  ClaimReferrerFeeEventObject
>;

export type ClaimReferrerFeeEventFilter =
  TypedEventFilter<ClaimReferrerFeeEvent>;

export interface SetMetaverseRegistryReferrerEventObject {
  _metaverseRegistry: string;
  _referrer: string;
  _percentage: number;
}
export type SetMetaverseRegistryReferrerEvent = TypedEvent<
  [string, string, number],
  SetMetaverseRegistryReferrerEventObject
>;

export type SetMetaverseRegistryReferrerEventFilter =
  TypedEventFilter<SetMetaverseRegistryReferrerEvent>;

export interface SetReferralAdminEventObject {
  _admin: string;
}
export type SetReferralAdminEvent = TypedEvent<
  [string],
  SetReferralAdminEventObject
>;

export type SetReferralAdminEventFilter =
  TypedEventFilter<SetReferralAdminEvent>;

export interface SetReferrerEventObject {
  _referrer: string;
  _mainPercentage: number;
  _secondaryPercentage: number;
}
export type SetReferrerEvent = TypedEvent<
  [string, number, number],
  SetReferrerEventObject
>;

export type SetReferrerEventFilter = TypedEventFilter<SetReferrerEvent>;

export interface ReferralFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ReferralFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    claimMultipleReferrerFees(
      _paymentTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    claimReferrerFee(
      _paymentToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    metaverseRegistryReferrer(
      _metaverseRegistry: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[LibReferral.MetaverseRegistryReferrerStructOutput]>;

    referralAdmin(overrides?: CallOverrides): Promise<[string]>;

    referrerFee(
      _referrer: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { amount_: BigNumber }>;

    referrerPercentage(
      _referrer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[LibReferral.ReferrerPercentageStructOutput]>;

    setMetaverseRegistryReferrers(
      _metaverseRegistries: PromiseOrValue<string>[],
      _referrers: PromiseOrValue<string>[],
      _percentages: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setReferralAdmin(
      _admin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setReferrers(
      _referrers: PromiseOrValue<string>[],
      _mainPercentages: PromiseOrValue<BigNumberish>[],
      _secondaryPercentages: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  claimMultipleReferrerFees(
    _paymentTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  claimReferrerFee(
    _paymentToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  metaverseRegistryReferrer(
    _metaverseRegistry: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<LibReferral.MetaverseRegistryReferrerStructOutput>;

  referralAdmin(overrides?: CallOverrides): Promise<string>;

  referrerFee(
    _referrer: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  referrerPercentage(
    _referrer: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<LibReferral.ReferrerPercentageStructOutput>;

  setMetaverseRegistryReferrers(
    _metaverseRegistries: PromiseOrValue<string>[],
    _referrers: PromiseOrValue<string>[],
    _percentages: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setReferralAdmin(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setReferrers(
    _referrers: PromiseOrValue<string>[],
    _mainPercentages: PromiseOrValue<BigNumberish>[],
    _secondaryPercentages: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    claimMultipleReferrerFees(
      _paymentTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    claimReferrerFee(
      _paymentToken: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [string, BigNumber] & { paymentToken_: string; amount_: BigNumber }
    >;

    metaverseRegistryReferrer(
      _metaverseRegistry: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<LibReferral.MetaverseRegistryReferrerStructOutput>;

    referralAdmin(overrides?: CallOverrides): Promise<string>;

    referrerFee(
      _referrer: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    referrerPercentage(
      _referrer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<LibReferral.ReferrerPercentageStructOutput>;

    setMetaverseRegistryReferrers(
      _metaverseRegistries: PromiseOrValue<string>[],
      _referrers: PromiseOrValue<string>[],
      _percentages: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    setReferralAdmin(
      _admin: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setReferrers(
      _referrers: PromiseOrValue<string>[],
      _mainPercentages: PromiseOrValue<BigNumberish>[],
      _secondaryPercentages: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ClaimReferrerFee(address,address,uint256)"(
      _claimer?: PromiseOrValue<string> | null,
      _token?: PromiseOrValue<string> | null,
      _amount?: null
    ): ClaimReferrerFeeEventFilter;
    ClaimReferrerFee(
      _claimer?: PromiseOrValue<string> | null,
      _token?: PromiseOrValue<string> | null,
      _amount?: null
    ): ClaimReferrerFeeEventFilter;

    "SetMetaverseRegistryReferrer(address,address,uint24)"(
      _metaverseRegistry?: PromiseOrValue<string> | null,
      _referrer?: PromiseOrValue<string> | null,
      _percentage?: null
    ): SetMetaverseRegistryReferrerEventFilter;
    SetMetaverseRegistryReferrer(
      _metaverseRegistry?: PromiseOrValue<string> | null,
      _referrer?: PromiseOrValue<string> | null,
      _percentage?: null
    ): SetMetaverseRegistryReferrerEventFilter;

    "SetReferralAdmin(address)"(
      _admin?: PromiseOrValue<string> | null
    ): SetReferralAdminEventFilter;
    SetReferralAdmin(
      _admin?: PromiseOrValue<string> | null
    ): SetReferralAdminEventFilter;

    "SetReferrer(address,uint24,uint24)"(
      _referrer?: PromiseOrValue<string> | null,
      _mainPercentage?: null,
      _secondaryPercentage?: null
    ): SetReferrerEventFilter;
    SetReferrer(
      _referrer?: PromiseOrValue<string> | null,
      _mainPercentage?: null,
      _secondaryPercentage?: null
    ): SetReferrerEventFilter;
  };

  estimateGas: {
    claimMultipleReferrerFees(
      _paymentTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    claimReferrerFee(
      _paymentToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    metaverseRegistryReferrer(
      _metaverseRegistry: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    referralAdmin(overrides?: CallOverrides): Promise<BigNumber>;

    referrerFee(
      _referrer: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    referrerPercentage(
      _referrer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setMetaverseRegistryReferrers(
      _metaverseRegistries: PromiseOrValue<string>[],
      _referrers: PromiseOrValue<string>[],
      _percentages: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setReferralAdmin(
      _admin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setReferrers(
      _referrers: PromiseOrValue<string>[],
      _mainPercentages: PromiseOrValue<BigNumberish>[],
      _secondaryPercentages: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    claimMultipleReferrerFees(
      _paymentTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    claimReferrerFee(
      _paymentToken: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    metaverseRegistryReferrer(
      _metaverseRegistry: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    referralAdmin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    referrerFee(
      _referrer: PromiseOrValue<string>,
      _token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    referrerPercentage(
      _referrer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setMetaverseRegistryReferrers(
      _metaverseRegistries: PromiseOrValue<string>[],
      _referrers: PromiseOrValue<string>[],
      _percentages: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setReferralAdmin(
      _admin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setReferrers(
      _referrers: PromiseOrValue<string>[],
      _mainPercentages: PromiseOrValue<BigNumberish>[],
      _secondaryPercentages: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
